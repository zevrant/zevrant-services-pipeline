- name: import Known Hosts
  hosts: 127.0.0.1
  tasks:
    - name: Import SSH Keys
      ansible.builtin.command:
        cmd: ssh-keyscan -H "{{ item }}" >> ~/.ssh/known_hosts
      loop: "{{ hosts }}"
- name: Setup Kubernetes On Host
  hosts: all
  become: true
  become_user: root
  tasks:
    - name: Update Packages
      ansible.builtin.yum:
        use_backend: yum4
        update_cache: true
        name: '*'
        state: latest
    - name: Install Dependencies
      ansible.builtin.shell: |
        yum update -y
        yum install -y yum-utils jq iproute-tc systemd-resolved
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    - name: Update Packages
      ansible.builtin.yum:
        use_backend: yum4
        update_cache: true
        name: 'iptables-services'
        state: latest
    - name: Add Kubernetes Repository
      ansible.builtin.copy:
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          exclude=kubelet-1.1*.**-0.x86_64
        dest: /etc/yum.repos.d/kubernetes.repo
    - name: Install Containerd & Kubeadm
      ansible.builtin.yum:
        update_cache: true
        name:
          - containerd.io
          - kubeadm
    - name: Create Node Exporter Systemd File
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Node Exporter
          Documentation=

          Wants=network.target
          After=network.target

          [Service]
          User=node-exporter

          WorkingDirectory=/opt/node-exporter
          ExecStart=/opt/node-exporter/node_exporter
        dest: /etc/systemd/system/node-exporter.service
    - name: Create Node Exporter User
      ansible.builtin.command:
        cmd: adduser --system --shel /bin/false --no-create-home node-exporter
    - name: Create Developers Group
      ansible.builtin.command:
        cmd: groupadd developers
    - name: Add Main User to Developers Group
      ansible.builtin.command:
        cmd: usermod -aG developers zevrant
    - name: Create Node Exporter Install Folder
      ansible.builtin.file:
        path: /opt/node-exporter
        state: directory
        mode: '0755'
        owner: node-exporter
        group: developers
    - name: Install Node Exporter
      become_user: root
      become: true
      ansible.builtin.shell: |
        #!/bin/bash
        curl -L https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz -o node-exporter.tar.gz
        tar xvf node-exporter.tar.gz
        mv node_exporter-* node-exporter
        mv node-exporter/* /opt/node-exporter
        rm -rf node-exporter*
        chown -R node-exporter:node-exporter /opt/node-exporter
        ausearch -c '(exporter)' --raw | audit2allow -M my-exporter
        semodule -X 300 -i my-exporter.pp
        restorecon -R /opt/node-exporter
        systemctl daemon-reload
        systemctl enable node-exporter --now
    - name: Enable ipv4 forwarding & nf call iptables
      become_user: root
      become: true
      ansible.builtin.copy:
        dest: /etc/sysctl.d/99-sysctl.conf
        content: |
          vm.max_map_count = 262144
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.conf.all.forwarding = 1
          net.ipv4.ip_forward = 1
    - name: Enable kernel modules
      become_user: root
      become: true
      ansible.builtin.copy:
        dest: /etc/modules-load.d/br_netfilter.conf
        content: |
          br_netfilter
    - name: Enable br netfilter
      become_user: root
      become: true
      ansible.builtin.command:
        cmd: modprobe br_netfilter
    - name: Reload Sysctl
      become_user: root
      become: true
      ansible.builtin.command:
        cmd: sysctl -p /etc/sysctl.d/99-sysctl.conf
    - name: Reload Systemd Services
      ansible.builtin.command:
        cmd: systemctl daemon-reload
    - name: Enable Systemd Cgroups
      ansible.builtin.shell: |
        #!/bin/bash
        mkdir -p /etc/containerd/
        /usr/bin/containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
    - name: Enable forwarding
      ansible.builtin.shell: |
        #!/bin/bash
        iptables -P FORWARD ACCEPT
        iptables -P FORWARD ACCEPT
        iptables -P OUTPUT ACCEPT
        iptables-save -f /etc/sysconfig/iptables
        modprobe br_netfilter
        modprobe overlay
        sysctl -p
    - name: Enable Systemd Services
      ansible.builtin.command:
        cmd: systemctl enable containerd kubelet node-exporter systemd-resolved iptables
    - name: Start Containerd & Node Exporter
      ansible.builtin.command:
        cmd: systemctl restart containerd node-exporter
    - name: Set Hostname
      ansible.builtin.copy:
        dest: /etc/hostname
        content: |
          "{{ hostname }}"
    - name: reboot
      ansible.builtin.reboot:
        test_command: whoami
    - name: Copy Root Certificate
      ansible.builtin.copy:
        dest: /etc/pki/ca-trust/source/anchors/zevrant-services.crt
        content: |
          -----BEGIN CERTIFICATE-----
          MIIB2zCCAWICFEcEPNArey0dW0m9m1AH4e6qLWnTMAoGCCqGSM49BAMEMFIxCzAJ
          BgNVBAYTAlVTMREwDwYDVQQIDAhNaWNoaWdhbjERMA8GA1UEBwwIQmF5IENpdHkx
          HTAbBgNVBAMMFHpldnJhbnQtc2VydmljZXMuY29tMB4XDTIyMDgyMDE2MzY1NloX
          DTIzMDgyMDE2MzY1NlowUjELMAkGA1UEBhMCVVMxETAPBgNVBAgMCE1pY2hpZ2Fu
          MREwDwYDVQQHDAhCYXkgQ2l0eTEdMBsGA1UEAwwUemV2cmFudC1zZXJ2aWNlcy5j
          b20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAS+u/fD8QuHGfB2nDXKyCGadI0ZRK1F
          EkSU9o5fa/xAxuHedvacP52BOetDQFU1kBeU+h3H1YPtpuzSHFrxdAidUprA5Cb1
          TEy7QPvGY0hNgNZ5eoHEJwYTeK61IP/b8g0wCgYIKoZIzj0EAwQDZwAwZAIwP7dz
          lJfb8HPAnMNIk+2sQxyltf1bXQrTx67GT5vYe2VS75yI62ZV/ycGRgSm9dJdAjBA
          Mg3mkNW4v4MzWY2fErtmkTRuVu5n/saCJpGZ/6jAK0qRtzAAdDNJlPtV2NPXMVE=
          -----END CERTIFICATE-----
    - name: Copy Root Certificate
      ansible.builtin.copy:
        dest: /etc/pki/ca-trust/source/anchors/zevrant-services-preprod-shared.crt
        content: |
          -----BEGIN CERTIFICATE-----
          MIICjzCCAhagAwIBAgICECkwCgYIKoZIzj0EAwQwUjELMAkGA1UEBhMCVVMxETAP
          BgNVBAgMCE1pY2hpZ2FuMREwDwYDVQQHDAhCYXkgQ2l0eTEdMBsGA1UEAwwUemV2
          cmFudC1zZXJ2aWNlcy5jb20wHhcNMjMwNTEwMjE0NjM5WhcNMjgwNTA4MjE0NjM5
          WjAqMSgwJgYDVQQDEx9aZXZyYW50IFNlcnZpY2VzIFByZXByb2QgU2hhcmVkMFkw
          EwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExAcD1IJINaN0R4YGlF5aPShLsFal6tHy
          Gac1zoJzpVeGUeGOxI22b4Tx+YwUN5QNZCs6Y4m2kX5lOJuPmafYLaOCAQIwgf8w
          HQYDVR0OBBYEFNHlG9r+1wW/IO19OEV0sbXL01ACMHcGA1UdIwRwMG6hVqRUMFIx
          CzAJBgNVBAYTAlVTMREwDwYDVQQIDAhNaWNoaWdhbjERMA8GA1UEBwwIQmF5IENp
          dHkxHTAbBgNVBAMMFHpldnJhbnQtc2VydmljZXMuY29tghRHBDzQK3stHVtJvZtQ
          B+Huqi1p0zASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjBBBgNV
          HREEOjA4gjZjZXJ0aWZpY2F0ZS1hdXRob3JpdHkucHJlcHJvZC1zaGFyZWQuc3Zj
          LmNsdXN0ZXIubG9jYWwwCgYIKoZIzj0EAwQDZwAwZAIwYB/ip281/01CtBMIcr2E
          QMUAzgCK6EURpil2i6cb1bD70/iDPo07gDWGng5OouThAjA7uF5Qjs8cSVRs4O97
          QQeA5xNRdCd0HeKZVx5wF4WDQ0fEfjirJvtH5F2asRe9He0=
          -----END CERTIFICATE-----
    - name: Load Certificate
      ansible.builtin.command:
        cmd: update-ca-trust extract && openssl verify /etc/pki/ca-trust/source/anchors/zevrant-services.crt
    - name: Reload Machine
      ansible.builtin.reboot:
