apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  ports:
    - port: 9094
      name: alerting
    - port: 3000
      name: https
  selector:
    app: grafana

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana
  namespace: monitoring
spec:
  secretName: grafana-tls
  issuerRef:
    name: acme-issuer
  duration: 24h
  renewBefore: 23h
  dnsNames:
    - grafana.preprod.zevrant-services.com

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "https"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/ssl-passthrough: "true"
#    nginx.ingress.kubernetes.io/rewrite-target: https://minio.zevrant-services.com/api/v1/buckets/$1
spec:
  rules:
    - host: grafana.preprod.zevrant-services.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  name: https
  ingressClassName: nginx


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "Always"
      volumes:
        - name: grafana-cert
          secret:
            secretName: grafana-tls
        - name: grafana-config
          configMap:
            name: grafana
      imagePullSecrets:
        - name: harbor-ro
      containers:
        - name: grafana
          image: harbor.zevrant-services.com/dockerhub/grafana/grafana-oss:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: grafana-cert
              mountPath: /opt/acme/certs/
            - name: grafana-config
              mountPath: /etc/grafana
          ports:
            - containerPort: 3000
              name: https
            - containerPort: 9094
              name: grafana-alert
              protocol: TCP
          startupProbe:
            httpGet:
              scheme: HTTPS
              path: /api/health
              port: 3000
            periodSeconds: 5
            failureThreshold: 4
            successThreshold: 1
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /api/health
              port: 3000
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          env:
            - name: GF_SERVER_PROTOCOL
              value: https
            - name: GF_SERVER_CERT_FILE
              value: /opt/acme/certs/tls.crt
            - name: GF_SERVER_CERT_KEY
              value: /opt/acme/certs/tls.key
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: grafana-postgres-postgresql-ha-pguser-grafana
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: grafana-postgres-postgresql-ha-pguser-grafana
            - name: POSTGRES_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  key: dbname
                  name: grafana-postgres-postgresql-ha-pguser-grafana
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: grafana-postgres-postgresql-ha-pguser-grafana
            - name: POSTGTRES_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-postgres-postgresql-ha-pguser-grafana
                  key: password

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: monitoring
data:
  grafana.ini: |
    [database]
    type = postgres
    host = ${POSTGRES_HOST}
    name = ${POSTGRES_DATABASE_NAME}
    user = ${POSTGRES_USER}
    password = ${POSTGTRES_DATABASE_PASSWORD}
    ssl_mode = require
    
    [unified_alerting]
    enabled = true
    ha_listen_address = "${POD_IP}:9094"
    ha_peers = "grafana:9094"
    ha_advertise_address = "${POD_IP}:9094"
    
    [server]
    domain = grafana.preprod.zevrant-services.com
    root_url = %(protocol)s://%(domain)s
