apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sabnzbd
  namespace: media
spec:
  replicas: 1
  serviceName: sabnzbd
  selector:
    matchLabels:
      app: sabnzbd
  volumeClaimTemplates:
      - metadata:
          name: downloads
        spec:
          accessModes: ["ReadWriteOnce" ]
          storageClassName: 'csi-rbd-sc'
          resources:
            requests:
              storage: 1Ti
      - metadata:
          name: config
        spec:
          accessModes: [ "ReadWriteOnce" ]
          storageClassName: 'csi-rbd-sc'
          resources:
            requests:
              storage: 10Gi
      - metadata:
          name: sonar-config
        spec:
          accessModes: [ "ReadWriteOnce" ]
          storageClassName: 'csi-rbd-sc'
          resources:
            requests:
              storage: 10Gi
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      imagePullSecrets:
        - name: harbor-ro
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "Always"
      volumes:
        - name: media-storage
          persistentVolumeClaim:
            claimName: downloads-sabnzbd-0
        - name: configmap
          configMap:
            name: sabnzbd
        - name: sonar-config
          persistentVolumeClaim:
            claimName: sonar-config
        - name: radarr-config
          persistentVolumeClaim:
            claimName: radarr-config
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: jellyfin-config
      containers:
        - name: sabnzbd
          image: docker.io/linuxserver/sabnzbd:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: media-storage
              mountPath: /downloads
            - name: config
              mountPath: /config/
          ports:
            - containerPort: 8080
          env:
            - name: TX
              value: America/Detroit
            - name: PUID
              value: '1000'
            - name: PGID
              value: '1000'
          resources:
            requests:
              cpu: 4000m
              memory: 2Gi
          livenessProbe:
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 5
            httpGet:
              port: 8080
              path: /
          startupProbe:
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 5
            httpGet:
              port: 8080
              path: /
        - name: sonarr
          image: ghcr.io/hotio/sonarr:release
          imagePullPolicy: Always
          volumeMounts:
            - name: media-storage
              mountPath: /downloads
            - name: sonar-config
              mountPath: /config
          ports:
            - containerPort: 8989
          env:
            - name: TZ
              value: America/Detroit
          resources:
            requests:
              cpu: 2000m
              memory: 4Gi
            limits:
              cpu: 4000m
              memory: 8Gi
          livenessProbe:
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 5
            httpGet:
              port: 8989
              path: /
          startupProbe:
            successThreshold: 1
            failureThreshold: 5
            periodSeconds: 5
            httpGet:
              port: 8989
              path: /
        - name: radarr
          image: ghcr.io/hotio/radarr:release
          imagePullPolicy: Always
          volumeMounts:
            - name: media-storage
              mountPath: /downloads
            - name: radarr-config
              mountPath: /config
          ports:
            - containerPort: 7878
          env:
            - name: TZ
              value: America/Detroit
          resources:
            requests:
              cpu: 2000m
              memory: 4Gi
            limits:
              cpu: 4000m
              memory: 8Gi
          livenessProbe:
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 5
            httpGet:
              port: 7878
              path: /
          startupProbe:
            successThreshold: 1
            failureThreshold: 5
            periodSeconds: 5
            httpGet:
              port: 7878
              path: /
        - name: jellyfin
          image: docker.io/jellyfin/jellyfin:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: media-storage
              mountPath: /downloads
            - name: jellyfin-config
              mountPath: /config
          ports:
            - containerPort: 8096
          env:
            - name: TX
              value: America/Detroit