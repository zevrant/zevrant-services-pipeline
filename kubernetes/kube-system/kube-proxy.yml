apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-proxier
  namespace: kube-system
automountServiceAccountToken: true

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-proxier
subjects:
  - kind: ServiceAccount
    name: node-proxier
    namespace: kube-system

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    component: kube-proxy
    k8s-app: kube-proxy
    kubernetes.io/cluster-service: "true"
    name: kube-proxy
    tier: node
  name: kube-proxy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      component: kube-proxy
      k8s-app: kube-proxy
      kubernetes.io/cluster-service: "true"
      name: kube-proxy
      tier: node
  template:
    metadata:
      labels:
        component: kube-proxy
        k8s-app: kube-proxy
        kubernetes.io/cluster-service: "true"
        name: kube-proxy
        tier: node
    spec:
      serviceAccountName: "node-proxier"
      tolerations:
        - operator: Exists
          effect: NoSchedule
      hostNetwork: true
      containers:
        - name: kube-proxy
          image: registry.k8s.io/kube-proxy:v1.26.1
          imagePullPolicy: Always
          command:
            - kube-proxy
            - --kubeconfig=/run/kubeconfig
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run/dbus
              name: dbus
            - mountPath: /run/kubeconfig
              name: kubeconfig
            - mountPath: /var/lib/kubelet
              name: kubelet
      volumes:
        - hostPath:
            path: /etc/kubernetes/kubelet.conf
          name: kubeconfig
        - hostPath:
            path: /var/run/dbus
          name: dbus
        - hostPath:
            path: /var/lib/kubelet/
          name: kubelet
