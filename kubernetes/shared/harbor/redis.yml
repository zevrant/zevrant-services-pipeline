apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: shared
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: https
  selector:
    app: redis

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis
  namespace: shared
spec:
  storageClassName: csi-rbd-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: shared
  labels:
    app: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "Always"
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: redis
          persistentVolumeClaim:
            claimName: redis
        - name: redis-password
          secret:
            secretName: harbor-redis-password
            defaultMode: 0400
        - name: redis-config
          configMap:
            name: redis-config
            items:
              - key: redis.conf
                path: redis.conf
        - name: redis-users
          configMap:
            name: redis-config
        - name: parsed-redis-acl
          emptyDir:
            sizeLimit: 1Gi
      initContainers:
        - name: user-setup
          image: docker.io/ubuntu:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /opt/redis/
              name: redis-users
            - mountPath: /var/redis/
              name: parsed-redis-acl
            - mountPath: /var/zevrant-services/redis-password
              name: redis-password
          command:
            - /bin/bash
          args:
            - -c
            - |
              HARBOR_PASSWORD="$(cat /var/zevrant-services/redis-password/..data/REDIS_PASSWORD)"
              ADMIN_PASSWORD="$(cat /var/zevrant-services/redis-password/..data/admin-password)"
              DEFAULT_PASSWORD="$(openssl rand 256 | base64 -w 0)"
              ls -l /var/zevrant-services/redis-password/..data/password /opt/redis/..data/redis-users.acl
              cp /opt/redis/..data/redis-users.acl /tmp/redis-users.acl
              sed -i "s/ADMIN_PASSWORD/$ADMIN_PASSWORD/g" /tmp/redis-users.acl 
              sed -i "s/HARBOR_PASSWORD/$HARBOR_PASSWORD/g" /tmp/redis-users.acl 
              sed -i "s/DEFAULT_PASSWORD/$DEFAULT_PASSWORD/g" /tmp/redis-users.acl 
              cp /tmp/redis-users.acl /var/redis/users.acl
              cp /opt/redis/..data/redis.conf /var/redis/redis.conf
      containers:
        - name: redis
          image: docker.io/redis:latest
          imagePullPolicy: Always
          command:
            - /usr/local/bin/redis-server
          args:
            - /var/redis/redis.conf
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: redis
              mountPath: /data
            - name: parsed-redis-acl
              mountPath: /var/redis/
          resources:
            requests:
              memory: 2Gi
              cpu: 1000m
            limits:
              memory: 16Gi
              cpu: 4000m

#          readinessProbe:
#            httpGet:
#              scheme: HTTPS
#              path: /acme/acme/directory
#              port: 8443
#            failureThreshold: 5
#            periodSeconds: 5
#          livenessProbe:
#            httpGet:
#              scheme: HTTPS
#              path: /acme/acme/directory
#              port: 8443
#            failureThreshold: 5
#            periodSeconds: 5

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: shared
data:
  redis-users.acl: |
    user admin on +@all >ADMIN_PASSWORD
    user harbor on +@read +@write +@set +@list +@string +@bitmap +@connection +@transaction +evalsha +eval ~* >HARBOR_PASSWORD
    user default on nopass -@all +@connection
  redis.conf: |
    protected-mode no
    port 6379
    tcp-backlog 5111
    timeout 0
    tcp-keepalive 300
    daemonize no
    pidfile /var/run/redis_6379.pid

    # Specify the server verbosity level.
    # This can be one of:
    # debug (a lot of information, useful for development/testing)
    # verbose (many rarely useful info, but not a mess like the debug level)
    # notice (moderately verbose, what you want in production probably)
    # warning (only very important / critical messages are logged)
    loglevel notice

    logfile ""
    databases 16
    always-show-logo no
    set-proc-title yes
    proc-title-template "{title} {listen-addr} {server-mode}"
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    rdb-del-sync-files no
    dir ./
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync yes

    repl-diskless-sync-delay 5

    repl-diskless-sync-max-replicas 0

    repl-diskless-load disabled

    repl-disable-tcp-nodelay no

    replica-priority 100

    acllog-max-len 128

    aclfile /var/redis/users.acl

    maxclients 100000


    lazyfree-lazy-eviction no
    lazyfree-lazy-expire no
    lazyfree-lazy-server-del no
    replica-lazy-flush no

    lazyfree-lazy-user-del no

    lazyfree-lazy-user-flush no

    oom-score-adj no

    oom-score-adj-values 0 200 800



    disable-thp yes


    appendonly no


    appendfilename "appendonly.aof"

    appenddirname "appendonlydir"

    appendfsync everysec

    no-appendfsync-on-rewrite no

    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    aof-load-truncated yes

    aof-use-rdb-preamble yes

    aof-timestamp-enabled no

    slowlog-log-slower-than 10000

    slowlog-max-len 128

    latency-monitor-threshold 0

    notify-keyspace-events ""
    hash-max-listpack-entries 512
    hash-max-listpack-value 64

    list-max-listpack-size -2

    list-compress-depth 0

    set-max-intset-entries 512

    hll-sparse-max-bytes 3000

    stream-node-max-bytes 4096
    stream-node-max-entries 100

    activerehashing yes

    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60

    hz 10

    dynamic-hz yes

    aof-rewrite-incremental-fsync yes

    rdb-save-incremental-fsync yes

    jemalloc-bg-thread yes
    
    bind 0.0.0.0  ::1